{
    "openapi": "3.0.0",
    "info": {
        "title": "Freelancer API",
        "description": "L5 Swagger OpenApi para la API de Freelancer",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost/api",
            "description": "API local"
        }
    ],
    "paths": {
        "/api/auth/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "User Login",
                "description": "Authenticates a user and returns an access token.",
                "operationId": "a7de355070c366cd5d4fbb90db245c18",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LoginResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "User Logout",
                "description": "Invalidates the authenticated user's access token.",
                "operationId": "8b6ff97611e610ae866809c0eecbf9d0",
                "responses": {
                    "200": {
                        "description": "Successful logout",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LogoutResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/projects": {
            "get": {
                "tags": [
                    "Projects"
                ],
                "summary": "Get all projects",
                "operationId": "c4eee1adbedeb07d586dffed8072ffaf",
                "parameters": [
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "Field to sort the results",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "name",
                            "example": "name"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "Order to sort the results (asc or desc)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "example": "desc"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search term to filter results, search fields: name, description",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "Project one"
                        }
                    },
                    {
                        "name": "pageItems",
                        "in": "query",
                        "description": "Determine the amount of items returned on each page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10|20|25|30"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of projects",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ProjectResponse"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Projects"
                ],
                "summary": "Create a new project",
                "operationId": "58049d1c1c0c50096707b34ca6b41fec",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Project one"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Loren ipsum at donei"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Project created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/projects/{id}": {
            "get": {
                "tags": [
                    "Projects"
                ],
                "summary": "Get a specific project by ID",
                "operationId": "b52fe42ca33c9809bd7b74c61c8f1978",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Project details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Project not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Projects"
                ],
                "summary": "Update an existing project",
                "operationId": "63059aae8ed2a475425e0a5e3f8b7445",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Project updated"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Loren Impsum at donei"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Project updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Project not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Projects"
                ],
                "summary": "Delete a project",
                "operationId": "3ec14f54be5fe56bd56e590d61c2b7c5",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Project deleted successfully"
                    },
                    "404": {
                        "description": "Project not found"
                    }
                }
            }
        },
        "/api/tasks": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Get all tasks",
                "operationId": "aa99279cca1fcd26840fa32a8a7d02c1",
                "parameters": [
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "Field to sort the results",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "name",
                            "example": "name"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "Order to sort the results (asc or desc)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "example": "desc"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search term to filter results, search fields: name, description",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "Task one"
                        }
                    },
                    {
                        "name": "pageItems",
                        "in": "query",
                        "description": "Determine the amount of items returned on each page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10|20|25|30"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of tasks",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TaskResponse"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Create a new task",
                "operationId": "61c8da06786a5cb7e2177cbf31f2257c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Task one"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Loren ipsum at donei"
                                    },
                                    "project_id": {
                                        "type": "integer",
                                        "example": "10"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Task created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Task"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/tasks/{id}": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Get a specific task by ID",
                "operationId": "4fb2293cdfe17fc903b60d2c33d29670",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tasks details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Task"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Task not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Update an existing task",
                "operationId": "48b7205ffb46ac9da784d5e07b4cdd5b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Task updated"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Loren Impsum at donei"
                                    },
                                    "project_id": {
                                        "type": "integer",
                                        "example": "9"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Task updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Task"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Task not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Delete a task",
                "operationId": "d79f4dd0936d103b8375280b6a3e360f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task deleted successfully"
                    },
                    "404": {
                        "description": "Task not found"
                    }
                }
            }
        },
        "/api/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get all users",
                "operationId": "2966bf90378855112f5e7d918be2f627",
                "parameters": [
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "Field to sort the results",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "name",
                            "example": "name"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "Order to sort the results (asc or desc)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "example": "desc"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search term to filter results, search fields: name, email",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "User one"
                        }
                    },
                    {
                        "name": "pageItems",
                        "in": "query",
                        "description": "Determine the amount of items returned on each page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10|20|25|30"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of users",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UserResponse"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/{id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get a specific user by ID",
                "operationId": "6d563d28722fb8bbfdec78ebcc973909",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update an existing user",
                "operationId": "98d6795bac88b1d1b465b0c73cd705e3",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "User updated"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "test@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "LoginRequest": {
                "title": "Login Request",
                "description": "Schema for user login request",
                "required": [
                    "email",
                    "password"
                ],
                "properties": {
                    "email": {
                        "description": "User's email address",
                        "type": "string",
                        "format": "email",
                        "example": "user@example.com"
                    },
                    "password": {
                        "description": "User's password",
                        "type": "string",
                        "format": "password",
                        "example": "secret123"
                    }
                },
                "type": "object"
            },
            "LoginResponse": {
                "title": "Login Response",
                "description": "Schema for user login response",
                "properties": {
                    "access_token": {
                        "description": "Access token for the user",
                        "type": "string",
                        "example": "1|xxxxxxx"
                    },
                    "token_type": {
                        "description": "Type of the token",
                        "type": "string",
                        "example": "Bearer"
                    }
                },
                "type": "object"
            },
            "LogoutResponse": {
                "title": "Logout Response",
                "description": "Schema for successful logout response",
                "properties": {
                    "message": {
                        "description": "Logout success message",
                        "type": "string",
                        "example": "Logged out successfully"
                    }
                },
                "type": "object"
            },
            "ProjectResponse": {
                "title": "Project Response",
                "properties": {
                    "name": {
                        "description": "List of projects",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Project"
                        }
                    },
                    "message": {
                        "type": "string",
                        "example": "..."
                    }
                },
                "type": "object"
            },
            "Project": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Project name"
                    },
                    "description": {
                        "type": "string",
                        "example": "Loren Ipsum"
                    }
                },
                "type": "object"
            },
            "ResetPasswordRequest": {
                "title": "Reset Password Request",
                "description": "Schema for reset password request",
                "required": [
                    "token",
                    "email",
                    "password",
                    "password_confirmation"
                ],
                "properties": {
                    "token": {
                        "description": "Password reset token",
                        "type": "string",
                        "example": "reset-token"
                    },
                    "email": {
                        "description": "User's email address",
                        "type": "string",
                        "format": "email",
                        "example": "john@example.com"
                    },
                    "password": {
                        "description": "New password",
                        "type": "string",
                        "format": "password",
                        "example": "newpass123"
                    },
                    "password_confirmation": {
                        "description": "Confirmation of the new password",
                        "type": "string",
                        "format": "password",
                        "example": "newpass123"
                    }
                },
                "type": "object"
            },
            "ResetPasswordSuccessResponse": {
                "title": "Reset Password Success Response",
                "description": "Schema for successful password reset response",
                "properties": {
                    "message": {
                        "description": "Password reset success message",
                        "type": "string",
                        "example": "Password reset successfully"
                    }
                },
                "type": "object"
            },
            "TaskResponse": {
                "title": "Task Response",
                "properties": {
                    "name": {
                        "description": "List of tasks",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Task"
                        }
                    },
                    "message": {
                        "type": "string",
                        "example": "..."
                    }
                },
                "type": "object"
            },
            "Task": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Tasks name"
                    },
                    "description": {
                        "type": "string",
                        "example": "Loren Ipsum"
                    },
                    "project_id": {
                        "type": "integer",
                        "example": "17"
                    }
                },
                "type": "object"
            },
            "UserResponse": {
                "title": "User Response",
                "properties": {
                    "name": {
                        "description": "List of users",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/User"
                        }
                    },
                    "message": {
                        "type": "string",
                        "example": "..."
                    }
                },
                "type": "object"
            },
            "User": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "User name"
                    },
                    "email": {
                        "type": "string",
                        "example": "test@example.com"
                    },
                    "is_admin": {
                        "type": "integer",
                        "example": "1 or 0"
                    }
                },
                "type": "object"
            }
        }
    },
    "tags": [
        {
            "name": "Auth",
            "description": "Auth"
        },
        {
            "name": "Projects",
            "description": "Projects"
        },
        {
            "name": "Tasks",
            "description": "Tasks"
        },
        {
            "name": "Users",
            "description": "Users"
        }
    ]
}